#0
./configure -prefix=/home/xxx/mbuild
make
make install

#1
编译gcc/g++源码， dereferencing pointer to incomplete type 'struct ucontext'
struct ucontext *uc_ = context->cfa;修改为struct ucontext_t *uc_ = context->cfa;



在使用c语言写程序时，可能遇到错误：error ：dereferencing pointer to incomplete type。其实，这个错误是指针指向的结构体类型没有定义。

原因可能有很多，但最多情况可能下面两种：

1，使用库函数或内核等提供的结构体时，没有包含相应的头文件。解决方法很简单，就是包含对应头文件就ok了。

2，若是自己定义的结构体，而且这个结构体恰恰是定义在.c文件中。在这种情况下，在其他.c文件中使用该结构体指针时，也会出现类似错误。


#2
git clone https://gcc.gnu.org/git/gcc.git
git tag
git checkout basepoints/gcc-8.2

#3
apt-get install flex
wget ftp://gcc.gnu.org/pub/gcc/infrastructure/gmp-6.1.0.tar.bz2
wget ftp://gcc.gnu.org/pub/gcc/infrastructure/mpfr-3.1.4.tar.bz2
wget ftp://gcc.gnu.org/pub/gcc/infrastructure/mpc-1.0.3.tar.gz

tar -jxvf gmp-6.1.0.tar.bz2
cd gmp-6.1.0
./configure
make && make install

cd ..

tar -jxvf mpfr-3.1.4.tar.bz2
cd mpfr-3.1.4
./configure
make && make install

cd ..

tar -zxvf mpc-1.0.3.tar.gz
cd mpc-1.0.3
./configure
make && make install

#4
总结

这里主要总结一下_cdecl、_stdcall、__fastcall三者之间的区别：
要点	__cdecl	__stdcall	__fastcall
参数传递方式	右->左	右->左	左边开始的两个不大于4字节（DWORD）的参数分别放在ECX和EDX寄存器，其余的参数自右向左压栈传送
清理栈方	调用者清理	被调用函数清理	被调用函数清理
适用场合	C/C++、MFC的默认方式; 可变参数的时候使用;	Win API	要求速度快
C编译修饰约定	_functionname	_functionname@number	@functionname@number
————————————————
版权声明：本文为CSDN博主「啊大1号」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。
原文链接：https://blog.csdn.net/a3192048/article/details/82084374





#5
##更新yum源，ubuntu可以忽略
wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo
sed -i  's/$releasever/7/g' /etc/yum.repos.d/CentOS-Base.repo
#清空缓存：yum clean all
#生成缓存：yum makecache
#更新源：sudo yum update

更新gcc版本到5.4

下载：
Wget http://mirror.hust.edu.cn/gnu/gcc/gcc-5.4.0/gcc-5.4.0.tar.bz2（国内镜像）

gcc ftp下载地址：
ftp://ftp.mirrorservice.org/sites/sourceware.org/pub/gcc/releases/gcc-4.7.2/


下载完成后，执行命令：
tar -jxvf gcc-5.4.0.tar.bz2 获得gcc-5.4.0文件夹
mkdir build （以后的操作目录）
cd gcc-5.4.0/

./contrib/download_prerequisites(这里在下载一些安装gcc会用到的文件，如果没配置wget则会失败。)

cd ../build/ (来到工作目录)

接下来要安装gmp、mpfr、mpc

gmp：
../gcc-5.4.0/gmp-4.3.2/configure
sudo make
sudo make install

mpfr:
../gcc-5.4.0/mpfr-2.4.2/configure
sudo make
sudo make install

../gcc-5.4.0/mpc-0.8.1/configure
sudo make
sudo make install

现在再安装gcc就可以了
../gcc-5.4.0/configure –enable-threads=posix –disable-checking –disable-multilib –enable-languages=c,c++
sudo make （及其耗时，将近两个小时）
sudo make install
gcc –version (验证gcc版本是否为5.4.0)
参考：https://www.qedev.com/linux/91867.html


../gcc-5.4.0/configure –enable-threads=posix –disable-checking –disable-multilib –enable-languages=c,c++ -disable-libsanitizer    #需要加上最后一段，不然会出现问题3

#######
遇到的问题 1
./md-unwind-support.h:61:47: 错误： dereferencing pointer to incomplete type ‘struct ucontext’
sc = (struct sigcontext *) (void *) &uc_->uc_mcontext
————————————————
问题参考链接
https://blog.csdn.net/juan190755422/article/details/103709300


#######
问题2
../../../../gcc-5.4.0/libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc:146:23: 致命错误： sys/ustat.h：没有那个文件或目录
编译中断。
make[4]: *** [Makefile:449：sanitizer_platform_limits_posix.lo] 错误 1
make[4]: 离开目录“/home/software/gcc/build/x86_64-unknown-linux-gnu/libsanitizer/sanitizer_common”
make[3]: *** [Makefile:437：all-recursive] 错误 1
make[3]: 离开目录“/home/software/gcc/build/x86_64-unknown-linux-gnu/libsanitizer”
make[2]: *** [Makefile:307：all] 错误 2
make[2]: 离开目录“/home/software/gcc/build/x86_64-unknown-linux-gnu/libsanitizer”
make[1]: *** [Makefile:16925：all-target-libsanitizer] 错误 2
make[1]: 离开目录“/home/software/gcc/build”
make: *** [Makefile:913：all] 错误 2

参考链接
https://zhuanlan.zhihu.com/p/377881136


############
问题3
In file included from ../../../../gcc-5.4.0/libsanitizer/sanitizer_common/sanitizer_platform_limits_posix.cc:179:0:
../../../../gcc-5.4.0/libsanitizer/sanitizer_common/sanitizer_internal_defs.h:272:72: 错误： size of array ‘assertion_failed__1090’ is negative



参考链接
https://zhuanlan.zhihu.com/p/357264769
